php0318@sh.itcast.cn
215915

git常用命令
本文中：
红色表示需要参数，需要你自己输入；
如果存在引号则必须输入。

生成SSH秘钥
ssh-keygen -t rsa -C "你的邮箱，注册了GitHub的那个。"

在用户的主目录（windos中就是 我的文档/.ssh，linux则是/home/用户名/.ssh)  id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。
注意，可以直接使用命令行 cd ～/ 进入用户主目录
设置用户名和邮箱
git config --global user.name "你的名字"			提交的时候会显示你的名字
git config --global user.email "你的邮箱"			提交时会显示你的邮箱

注意： 这个必须设置。

主要命令

git init						初始化仓库
git clone 远程版本库地址		克隆远程版本库至本地

git status						查看仓库当前状态
git diff 文件名					查看文件的详细情况

git add 文件名					添加文件到暂存区
git add -A						添加当前全部修改的内容到暂存区

#####################################
git checkout -- 文件名			撤销当前工作区修改，恢复到暂存区的状态，如果暂存区不存在则恢复至最后一个版本号
git reset HEAD  文件名			撤销当前暂存区修改，并放回工作区
git commit -m	"提交信息"		提交并注释
git log						查看版本提交情况
git log --pretty=oneline			精简查看提交信息

git reset --hard 版本名			回退到指定版本号
####################################

git stash						将当前工作区内容放进冰箱
git stash list     				查看当前冰箱里的内容列表
git stash apply 				把冰箱里的内容放到工作区
git stash drop   				删除冰箱里的内容
git stash pop  					把冰箱里的内容放到工作区并删除冰箱里的内容
注： 可以指定具体的名称来恢复不同的冰箱内容

######################################
git checkout -- 文件名			将版本库的文件替换工作区的文件（通常是误删之后使用，不过你会丢失最近一次工作区的修改）
git checkout 分支名				切换分支
git checkout -b 分支名			创建分支并切换分支
git branch -d 分支名			删除分支
git branch -D 分支名			强制删除分支
git merge 分支名				合并分支

git merge --no-ff -m "合并信息" 合并分支名			
注意 ：工作中必须使用--no-ff 不然会死的很惨（这个会强制git保存你的合并信息，防止你干了大事无法恢复）

########################################

git remote					查看远程仓库
git remote -v					查看远程仓库详细信息

git branch --set-upstream 本地分支名 origin/远程分支名	将本地分支和原创分支进行关联

git pull						将远程分支抓取回本地（通常是用来解决版本冲突）
git push						推送到远程仓库（如果你不是很懂，最好问了再提交，否则可能会导致你被开除）

###########################
git reflog						显示你之前使用过的每一条命令
git tag 标签名 [版本号]			给当前分支打一个标签，如果输入版本号则打给该版本号



